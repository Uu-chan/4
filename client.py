import zmq, re # ZeroMQ и регулярные выражения
from datetime import datetime # для вывода времени

def get_address():
    #re_ip = '^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$' # только IPv4

    # огромное регулярное выражение, может в IPv4 и IPv6 - отсюда: https://stackoverflow.com/a/23483979/7792673
    re_ip = '(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$|^(([a-zA-Z]|[a-zA-Z][a-zA-Z0-9\-]*[a-zA-Z0-9])\.)*([A-Za-z]|[A-Za-z][A-Za-z0-9\-]*[A-Za-z0-9])$|^\s*((([0-9A-Fa-f]{1,4}:){7}([0-9A-Fa-f]{1,4}|:))|(([0-9A-Fa-f]{1,4}:){6}(:[0-9A-Fa-f]{1,4}|((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){5}(((:[0-9A-Fa-f]{1,4}){1,2})|:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3})|:))|(([0-9A-Fa-f]{1,4}:){4}(((:[0-9A-Fa-f]{1,4}){1,3})|((:[0-9A-Fa-f]{1,4})?:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){3}(((:[0-9A-Fa-f]{1,4}){1,4})|((:[0-9A-Fa-f]{1,4}){0,2}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){2}(((:[0-9A-Fa-f]{1,4}){1,5})|((:[0-9A-Fa-f]{1,4}){0,3}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(([0-9A-Fa-f]{1,4}:){1}(((:[0-9A-Fa-f]{1,4}){1,6})|((:[0-9A-Fa-f]{1,4}){0,4}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:))|(:(((:[0-9A-Fa-f]{1,4}){1,7})|((:[0-9A-Fa-f]{1,4}){0,5}:((25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)(\.(25[0-5]|2[0-4]\d|1\d\d|[1-9]?\d)){3}))|:)))(%.+)?\s*'
    result = re.search(re_ip, input('Введите адрес сервера или просто нажмите enter для localhost: '))
    print('\n')
    if not result:
        print('(будет использован localhost)')
        return '127.0.0.1'
    else:
        return result.group(0) # возвращает результат из поиска регулярного выражения, если таковой был - т.е. адрес

port = '11010' # порт, к которому подключаться
addr = get_address() # получения адреса, к которому подключаться

context = zmq.Context() # создание контекста
socket = context.socket(zmq.SUB) # выбор роли "подписка" в паттерне pub-sub 
socket.connect('tcp://{}:{}'.format(addr, port)) # "подключение/ожидание подключения к серверу по полученному выше адресу "
socket.setsockopt_string(zmq.SUBSCRIBE, '') # ЕЩЕ раз выбор "подписка", но теперь уже с заданием того, что сообщения могут приходить откуда угодно, а не только с локальных программ с помощью ''

while True: # бесконечный цикл
    string = socket.recv() # получение/ожидание получения - сообщения
    print('%s: %s\n\n' % (datetime.now(), string.decode('utf-8'))) # декодирование и печать сообщения, а также времени, когда пришло 